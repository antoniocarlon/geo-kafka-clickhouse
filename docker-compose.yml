version: '3.1'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-logs:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    volumes:
      - kafka-data:/var/lib/kafka/data
      - kafka-etc:/etc/kafka

  kafka-topics-generator:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - kafka
    command: >
      bash -c
        "sleep 5s &&
        kafka-topics --create --topic=gkch --if-not-exists --bootstrap-server=kafka:9092"
        
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021

  clickhouse:
    image: gkch_clickhouse
    build:
      context: clickhouse
    ports:
      - 8123:8123
      - 9000:9000
    volumes:
      - clickhouse-data:/var/lib/clickhouse/
    depends_on:
      - kafka

  api:
    image: gkch_api
    build:
      context: api
    restart: always
    ports:
      - 8000:8000
    volumes:
      - ./api/src:/src
    command: bash -c "uvicorn src.app.main:app --host 0.0.0.0 --port 8000 --reload"
    depends_on:
      - kafka
      - clickhouse
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      CLICKHOUSE_HOST: clickhouse

volumes:
  zk-data:
  zk-logs:
  kafka-data:
  kafka-etc:
  clickhouse-data:
